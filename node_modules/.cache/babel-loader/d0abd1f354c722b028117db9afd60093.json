{"ast":null,"code":"var _jsxFileName = \"/home/andy/rr/consuming-rest/src/Graph.js\";\nimport React, { Component } from 'react';\nimport * as d3 from 'd3';\n\nclass Graph extends React.Component {\n  constructor(props) {\n    super(props); //this.createGraph = this.createGraph(this);\n\n    this.myRef = React.createRef();\n  } //    static propTypes = {...}\n\n\n  componentDidMount() {\n    this.createGraph(this.myRef);\n  }\n\n  componentDidUpdate() {//this.createGraph(this.myRef)\n  }\n\n  componentWillMount() {//this.createGraph(this.myRef)\n  }\n\n  createGraph(ref) {\n    // D3 Code to create the chart\n    // using this._rootNode as container\n    var svg = d3.select(ref.current),\n        width = +svg.attr(\"width\"),\n        height = +svg.attr(\"height\");\n    var color = d3.scaleOrdinal(d3.schemeCategory10);\n    var simulation = d3.forceSimulation().force(\"link\", d3.forceLink().distance(100).id(function (d) {\n      return d.id;\n    })).force(\"charge\", d3.forceManyBody()).force(\"center\", d3.forceCenter(width / 2, height / 2));\n    d3.json(\"./miserables.json\", function (error, graph) {\n      if (error) throw error;\n      var link = svg.append(\"g\") //      .attr(\"class\", \"links\")\n      .selectAll(\"line\").data(graph.links).enter().append(\"line\").attr(\"stroke-width\", function (d) {\n        return Math.sqrt(d.value);\n      });\n      var node = svg.append(\"g\").append(\"g\") //     .attr(\"class\", \"nodes\")\n      .selectAll(\"g\").data(graph.nodes).enter().append(\"g\");\n      var circles = node.append(\"circle\").attr(\"r\", function (d) {\n        return d.size;\n      }).attr(\"fill\", function (d) {\n        return color(d.group);\n      }).call(d3.drag().on(\"start\", dragstarted).on(\"drag\", dragged).on(\"end\", dragended));\n      var lables = node.append(\"text\").text(function (d) {\n        return d.id;\n      }).attr('x', 6).attr('y', 3);\n      node.append(\"title\").text(function (d) {\n        return d.id;\n      });\n      simulation.nodes(graph.nodes).on(\"tick\", ticked);\n      simulation.force(\"link\").links(graph.links);\n\n      function ticked() {\n        link.attr(\"x1\", function (d) {\n          return d.source.x;\n        }).attr(\"y1\", function (d) {\n          return d.source.y;\n        }).attr(\"x2\", function (d) {\n          return d.target.x;\n        }).attr(\"y2\", function (d) {\n          return d.target.y;\n        });\n        node.attr(\"transform\", function (d) {\n          return \"translate(\" + d.x + \",\" + d.y + \")\";\n        });\n      }\n    });\n\n    function dragstarted(d) {\n      if (!d3.event.active) simulation.alphaTarget(0.3).restart();\n      d.fx = d.x;\n      d.fy = d.y;\n    }\n\n    function dragged(d) {\n      d.fx = d3.event.x;\n      d.fy = d3.event.y;\n    }\n\n    function dragended(d) {\n      if (!d3.event.active) simulation.alphaTarget(0);\n      d.fx = null;\n      d.fy = null;\n    }\n  }\n\n  shouldComponentUpdate() {\n    // Prevents component re-rendering\n    return false;\n  }\n\n  _setRef(componentNode) {\n    this._rootNode = componentNode;\n  }\n\n  render() {\n    //        <div className=\"line-container\" ref={this._setRef.bind(this)} \n    //return (<svg id=\"svgid\" width=\"960\" height=\"600\"></svg>)\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }, React.createElement(\"svg\", {\n      ref: this.myRef,\n      width: \"900\",\n      height: \"600\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \" \"), React.createElement(\"button\", {\n      onClick: () => {\n        // Move to here, causes the current ref to be accessed during onClick\n        const ref = this.myRef.current;\n        console.log(ref);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }, \"Run Me\"));\n  }\n\n}\n\nexport default Graph;","map":{"version":3,"sources":["/home/andy/rr/consuming-rest/src/Graph.js"],"names":["React","Component","d3","Graph","constructor","props","myRef","createRef","componentDidMount","createGraph","componentDidUpdate","componentWillMount","ref","svg","select","current","width","attr","height","color","scaleOrdinal","schemeCategory10","simulation","forceSimulation","force","forceLink","distance","id","d","forceManyBody","forceCenter","json","error","graph","link","append","selectAll","data","links","enter","Math","sqrt","value","node","nodes","circles","size","group","call","drag","on","dragstarted","dragged","dragended","lables","text","ticked","source","x","y","target","event","active","alphaTarget","restart","fx","fy","shouldComponentUpdate","_setRef","componentNode","_rootNode","render","console","log"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport * as d3 from 'd3';\n\nclass Graph extends React.Component {\nconstructor(props){\n      super(props)\n      //this.createGraph = this.createGraph(this);\n      this.myRef = React.createRef();\n   }\n\n//    static propTypes = {...}\n\n    componentDidMount() {\n       this.createGraph(this.myRef)\n    }\n    componentDidUpdate() {\n       //this.createGraph(this.myRef)\n    }\n    componentWillMount() {\n       //this.createGraph(this.myRef)\n    }\n    createGraph(ref) {\n        // D3 Code to create the chart\n        // using this._rootNode as container\nvar svg = d3.select(ref.current),\n    width = +svg.attr(\"width\"),\n    height = +svg.attr(\"height\");\n\nvar color = d3.scaleOrdinal(d3.schemeCategory10);\n\n\nvar simulation = d3.forceSimulation()\n    .force(\"link\", d3.forceLink().distance(100).id(function(d) { return d.id; }))\n    .force(\"charge\", d3.forceManyBody())\n    .force(\"center\", d3.forceCenter(width / 2, height / 2));\n\nd3.json(\"./miserables.json\", function(error, graph) {\n  if (error) throw error;\n\nvar link = svg.append(\"g\")\n//      .attr(\"class\", \"links\")\n    .selectAll(\"line\")\n    .data(graph.links)\n    .enter().append(\"line\")\n      .attr(\"stroke-width\", function(d) { return Math.sqrt(d.value); });\n\n    var node=svg.append(\"g\")\n    .append(\"g\")\n //     .attr(\"class\", \"nodes\")\n    .selectAll(\"g\")\n    .data(graph.nodes)\n    .enter().append(\"g\")\n    \n  var circles = node.append(\"circle\")\n      .attr(\"r\", function(d) { return (d.size); })\n      .attr(\"fill\", function(d) { return color(d.group); })\n      .call(d3.drag()\n          .on(\"start\", dragstarted)\n          .on(\"drag\", dragged)\n          .on(\"end\", dragended));\n\n  var lables = node.append(\"text\")\n      .text(function(d) {\n        return d.id;\n      })\n      .attr('x', 6)\n      .attr('y', 3);\n\n  node.append(\"title\")\n      .text(function(d) { return d.id; });\n\n  simulation\n      .nodes(graph.nodes)\n      .on(\"tick\", ticked);\n\n  simulation.force(\"link\")\n      .links(graph.links);\n\n  function ticked() {\n    link\n        .attr(\"x1\", function(d) { return d.source.x; })\n        .attr(\"y1\", function(d) { return d.source.y; })\n        .attr(\"x2\", function(d) { return d.target.x; })\n        .attr(\"y2\", function(d) { return d.target.y; });\n\n    node\n        .attr(\"transform\", function(d) {\n          return \"translate(\" + d.x + \",\" + d.y + \")\";\n        })\n  }\n});\n\nfunction dragstarted(d) {\n  if (!d3.event.active) simulation.alphaTarget(0.3).restart();\n  d.fx = d.x;\n  d.fy = d.y;\n}\n\nfunction dragged(d) {\n  d.fx = d3.event.x;\n  d.fy = d3.event.y;\n}\n\nfunction dragended(d) {\n  if (!d3.event.active) simulation.alphaTarget(0);\n  d.fx = null;\n  d.fy = null;\n}\n\n    }\n\n    shouldComponentUpdate() {\n        // Prevents component re-rendering\n        return false;\n    }\n\n    _setRef(componentNode) {\n        this._rootNode = componentNode;\n    }\n\n    render() {\n//        <div className=\"line-container\" ref={this._setRef.bind(this)} \n//return (<svg id=\"svgid\" width=\"960\" height=\"600\"></svg>)\nreturn (\n<div>\n<svg ref={this.myRef} width=\"900\" height=\"600\"> </svg>\n<button\n          onClick={() => {\n            // Move to here, causes the current ref to be accessed during onClick\n            const ref = this.myRef.current;\n            console.log(ref);\n          }}\n        >\n          Run Me\n        </button>\n</div>\n    )\n   }\n}\n\nexport default Graph;\n"]},"metadata":{},"sourceType":"module"}